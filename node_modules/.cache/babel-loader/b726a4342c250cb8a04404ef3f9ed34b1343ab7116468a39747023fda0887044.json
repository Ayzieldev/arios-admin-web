{"ast":null,"code":"import React,{createContext,useContext,useState,useEffect}from'react';import api from'../utils/api';import{jsx as _jsx}from\"react/jsx-runtime\";const CustomerContext=/*#__PURE__*/createContext();export const useCustomer=()=>{const context=useContext(CustomerContext);if(!context){throw new Error('useCustomer must be used within a CustomerProvider');}return context;};export const CustomerProvider=_ref=>{let{children}=_ref;const[cart,setCart]=useState({items:[],totalItems:0,totalAmount:0});const[isCustomerMode,setIsCustomerMode]=useState(false);const[loading,setLoading]=useState(false);// Set up axios default headers\nuseEffect(()=>{const token=localStorage.getItem('token');if(token){api.defaults.headers.common['x-auth-token']=token;console.log('Token set in axios headers:',token);}else{console.log('No token found in localStorage');}},[]);// Load cart from database\nconst loadCart=async()=>{try{setLoading(true);const token=localStorage.getItem('token');console.log('Loading cart - Token:',token?'Present':'Missing');if(!token){console.log('No token found, setting empty cart');setCart({items:[],totalItems:0,totalAmount:0});return;}console.log('Making cart request to /api/cart/');const response=await api.get('/cart/');console.log('Cart response:',response.data);setCart(response.data);}catch(error){var _error$response;console.error('Error loading cart:',error);console.error('Error response:',(_error$response=error.response)===null||_error$response===void 0?void 0:_error$response.data);setCart({items:[],totalItems:0,totalAmount:0});}finally{setLoading(false);}};// Load cart on mount and when token changes\nuseEffect(()=>{loadCart();},[]);const addToCart=async function(product){let quantity=arguments.length>1&&arguments[1]!==undefined?arguments[1]:1;try{setLoading(true);const token=localStorage.getItem('token');console.log('Adding to cart - Token:',token?'Present':'Missing');console.log('Product:',product._id,'Quantity:',quantity);if(!token){throw new Error('User not authenticated');}const response=await api.post('/cart/add',{productId:product._id,quantity:quantity});console.log('Add to cart response:',response.data);setCart(response.data);}catch(error){var _error$response2;console.error('Error adding to cart:',error);console.error('Error response:',(_error$response2=error.response)===null||_error$response2===void 0?void 0:_error$response2.data);throw error;}finally{setLoading(false);}};const removeFromCart=async productId=>{try{setLoading(true);const response=await api.delete(`/cart/remove/${productId}`);setCart(response.data);}catch(error){console.error('Error removing from cart:',error);throw error;}finally{setLoading(false);}};const updateQuantity=async(productId,quantity)=>{try{setLoading(true);const response=await api.put(`/cart/update/${productId}`,{quantity:quantity});setCart(response.data);}catch(error){console.error('Error updating cart:',error);throw error;}finally{setLoading(false);}};const clearCart=async()=>{try{setLoading(true);const response=await api.delete('/cart/clear');setCart(response.data);}catch(error){console.error('Error clearing cart:',error);throw error;}finally{setLoading(false);}};const getTotalItems=()=>{return cart.totalItems||0;};const getTotalAmount=()=>{return cart.totalAmount||0;};const toggleCustomerMode=()=>{setIsCustomerMode(!isCustomerMode);};const value={cart,addToCart,removeFromCart,updateQuantity,clearCart,getTotalItems,getTotalAmount,isCustomerMode,toggleCustomerMode,loading,loadCart};return/*#__PURE__*/_jsx(CustomerContext.Provider,{value:value,children:children});};","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","api","jsx","_jsx","CustomerContext","useCustomer","context","Error","CustomerProvider","_ref","children","cart","setCart","items","totalItems","totalAmount","isCustomerMode","setIsCustomerMode","loading","setLoading","token","localStorage","getItem","defaults","headers","common","console","log","loadCart","response","get","data","error","_error$response","addToCart","product","quantity","arguments","length","undefined","_id","post","productId","_error$response2","removeFromCart","delete","updateQuantity","put","clearCart","getTotalItems","getTotalAmount","toggleCustomerMode","value","Provider"],"sources":["C:/Users/Desktop/Desktop/gitfiles/Arios/arios-admin-web/src/contexts/CustomerContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport api from '../utils/api';\r\n\r\nconst CustomerContext = createContext();\r\n\r\nexport const useCustomer = () => {\r\n  const context = useContext(CustomerContext);\r\n  if (!context) {\r\n    throw new Error('useCustomer must be used within a CustomerProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const CustomerProvider = ({ children }) => {\r\n  const [cart, setCart] = useState({ items: [], totalItems: 0, totalAmount: 0 });\r\n  const [isCustomerMode, setIsCustomerMode] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  // Set up axios default headers\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      api.defaults.headers.common['x-auth-token'] = token;\r\n      console.log('Token set in axios headers:', token);\r\n    } else {\r\n      console.log('No token found in localStorage');\r\n    }\r\n  }, []);\r\n\r\n  // Load cart from database\r\n  const loadCart = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const token = localStorage.getItem('token');\r\n      console.log('Loading cart - Token:', token ? 'Present' : 'Missing');\r\n      \r\n      if (!token) {\r\n        console.log('No token found, setting empty cart');\r\n        setCart({ items: [], totalItems: 0, totalAmount: 0 });\r\n        return;\r\n      }\r\n\r\n      console.log('Making cart request to /api/cart/');\r\n              const response = await api.get('/cart/');\r\n      console.log('Cart response:', response.data);\r\n      setCart(response.data);\r\n    } catch (error) {\r\n      console.error('Error loading cart:', error);\r\n      console.error('Error response:', error.response?.data);\r\n      setCart({ items: [], totalItems: 0, totalAmount: 0 });\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Load cart on mount and when token changes\r\n  useEffect(() => {\r\n    loadCart();\r\n  }, []);\r\n\r\n  const addToCart = async (product, quantity = 1) => {\r\n    try {\r\n      setLoading(true);\r\n      const token = localStorage.getItem('token');\r\n      console.log('Adding to cart - Token:', token ? 'Present' : 'Missing');\r\n      console.log('Product:', product._id, 'Quantity:', quantity);\r\n      \r\n      if (!token) {\r\n        throw new Error('User not authenticated');\r\n      }\r\n\r\n              const response = await api.post('/cart/add', {\r\n        productId: product._id,\r\n        quantity: quantity\r\n      });\r\n      console.log('Add to cart response:', response.data);\r\n      setCart(response.data);\r\n    } catch (error) {\r\n      console.error('Error adding to cart:', error);\r\n      console.error('Error response:', error.response?.data);\r\n      throw error;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const removeFromCart = async (productId) => {\r\n    try {\r\n      setLoading(true);\r\n              const response = await api.delete(`/cart/remove/${productId}`);\r\n      setCart(response.data);\r\n    } catch (error) {\r\n      console.error('Error removing from cart:', error);\r\n      throw error;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const updateQuantity = async (productId, quantity) => {\r\n    try {\r\n      setLoading(true);\r\n              const response = await api.put(`/cart/update/${productId}`, {\r\n        quantity: quantity\r\n      });\r\n      setCart(response.data);\r\n    } catch (error) {\r\n      console.error('Error updating cart:', error);\r\n      throw error;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const clearCart = async () => {\r\n    try {\r\n      setLoading(true);\r\n              const response = await api.delete('/cart/clear');\r\n      setCart(response.data);\r\n    } catch (error) {\r\n      console.error('Error clearing cart:', error);\r\n      throw error;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const getTotalItems = () => {\r\n    return cart.totalItems || 0;\r\n  };\r\n\r\n  const getTotalAmount = () => {\r\n    return cart.totalAmount || 0;\r\n  };\r\n\r\n  const toggleCustomerMode = () => {\r\n    setIsCustomerMode(!isCustomerMode);\r\n  };\r\n\r\n  const value = {\r\n    cart,\r\n    addToCart,\r\n    removeFromCart,\r\n    updateQuantity,\r\n    clearCart,\r\n    getTotalItems,\r\n    getTotalAmount,\r\n    isCustomerMode,\r\n    toggleCustomerMode,\r\n    loading,\r\n    loadCart\r\n  };\r\n\r\n  return (\r\n    <CustomerContext.Provider value={value}>\r\n      {children}\r\n    </CustomerContext.Provider>\r\n  );\r\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}