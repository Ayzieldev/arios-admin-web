{"ast":null,"code":"import axios from 'axios';\nconsole.log('üîß Environment check:');\nconsole.log('REACT_APP_API_URL:', process.env.REACT_APP_API_URL);\nconst api = axios.create({\n  baseURL: process.env.REACT_APP_API_URL || 'http://localhost:5000/api'\n});\nconsole.log('üîß Final API baseURL:', api.defaults.baseURL);\n\n// Add request interceptor for debugging\napi.interceptors.request.use(config => {\n  var _config$method;\n  console.log('üöÄ API Request:', (_config$method = config.method) === null || _config$method === void 0 ? void 0 : _config$method.toUpperCase(), config.url);\n  console.log('üîó Base URL:', process.env.REACT_APP_API_URL);\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Add response interceptor for debugging\napi.interceptors.response.use(response => {\n  console.log('‚úÖ API Response:', response.status, response.config.url);\n  return response;\n}, error => {\n  var _error$response, _error$config;\n  console.error('‚ùå API Error:', (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status, (_error$config = error.config) === null || _error$config === void 0 ? void 0 : _error$config.url, error.message);\n  return Promise.reject(error);\n});\nexport default api;","map":{"version":3,"names":["axios","console","log","process","env","REACT_APP_API_URL","api","create","baseURL","defaults","interceptors","request","use","config","_config$method","method","toUpperCase","url","error","Promise","reject","response","status","_error$response","_error$config","message"],"sources":["C:/xampp/htdocs/arios-admin-web/src/utils/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconsole.log('üîß Environment check:');\r\nconsole.log('REACT_APP_API_URL:', process.env.REACT_APP_API_URL);\r\n\r\nconst api = axios.create({\r\n  baseURL: process.env.REACT_APP_API_URL || 'http://localhost:5000/api'\r\n});\r\n\r\nconsole.log('üîß Final API baseURL:', api.defaults.baseURL);\r\n\r\n// Add request interceptor for debugging\r\napi.interceptors.request.use(\r\n  (config) => {\r\n    console.log('üöÄ API Request:', config.method?.toUpperCase(), config.url);\r\n    console.log('üîó Base URL:', process.env.REACT_APP_API_URL);\r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Add response interceptor for debugging\r\napi.interceptors.response.use(\r\n  (response) => {\r\n    console.log('‚úÖ API Response:', response.status, response.config.url);\r\n    return response;\r\n  },\r\n  (error) => {\r\n    console.error('‚ùå API Error:', error.response?.status, error.config?.url, error.message);\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport default api; "],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzBC,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAC;AACpCD,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEC,OAAO,CAACC,GAAG,CAACC,iBAAiB,CAAC;AAEhE,MAAMC,GAAG,GAAGN,KAAK,CAACO,MAAM,CAAC;EACvBC,OAAO,EAAEL,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI;AAC5C,CAAC,CAAC;AAEFJ,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAEI,GAAG,CAACG,QAAQ,CAACD,OAAO,CAAC;;AAE1D;AACAF,GAAG,CAACI,YAAY,CAACC,OAAO,CAACC,GAAG,CACzBC,MAAM,IAAK;EAAA,IAAAC,cAAA;EACVb,OAAO,CAACC,GAAG,CAAC,iBAAiB,GAAAY,cAAA,GAAED,MAAM,CAACE,MAAM,cAAAD,cAAA,uBAAbA,cAAA,CAAeE,WAAW,CAAC,CAAC,EAAEH,MAAM,CAACI,GAAG,CAAC;EACxEhB,OAAO,CAACC,GAAG,CAAC,cAAc,EAAEC,OAAO,CAACC,GAAG,CAACC,iBAAiB,CAAC;EAC1D,OAAOQ,MAAM;AACf,CAAC,EACAK,KAAK,IAAK;EACT,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;;AAED;AACAZ,GAAG,CAACI,YAAY,CAACW,QAAQ,CAACT,GAAG,CAC1BS,QAAQ,IAAK;EACZpB,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEmB,QAAQ,CAACC,MAAM,EAAED,QAAQ,CAACR,MAAM,CAACI,GAAG,CAAC;EACpE,OAAOI,QAAQ;AACjB,CAAC,EACAH,KAAK,IAAK;EAAA,IAAAK,eAAA,EAAAC,aAAA;EACTvB,OAAO,CAACiB,KAAK,CAAC,cAAc,GAAAK,eAAA,GAAEL,KAAK,CAACG,QAAQ,cAAAE,eAAA,uBAAdA,eAAA,CAAgBD,MAAM,GAAAE,aAAA,GAAEN,KAAK,CAACL,MAAM,cAAAW,aAAA,uBAAZA,aAAA,CAAcP,GAAG,EAAEC,KAAK,CAACO,OAAO,CAAC;EACvF,OAAON,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;AAED,eAAeZ,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}